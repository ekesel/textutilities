{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","type","to","title","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","placeholder","backgroundColor","value","onChange","event","target","rows","disabled","length","toUpperCase","showAlert","toLowerCase","temp","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","trim","replace","defaultProps","Alert","height","alert","role","msg","About","class","href","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ea457d16.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from \"prop-types\"\nimport { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n    return (\n        <>\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n                <div className=\"container-fluid\">\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                            </li>\n                        </ul>\n                        <div className={`form-check form-switch text-${props.mode===`light`?`dark`:'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode===`light`?`dark`:'light'} Mode</label>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string\n}\n\nNavbar.defaultProps = {\n    title: \"Set Title\",\n    aboutText: \"Set About Here\"\n}","import React, { useState } from 'react'\nimport PropTypes from \"prop-types\"\n\nexport default function TextForm(props) {\n    const handleUpClick =() =>{\n        let newText = text;\n        setText(newText.toUpperCase())\n        props.showAlert(\"Converted to Upper Case\",\"success\")\n    }\n    const handleLowClick =() =>{\n        let newText = text;\n        setText(newText.toLowerCase())\n        props.showAlert(\"Converted to Lower Case\",\"success\")\n    }\n    const handleClearClick =() =>{\n        setText('')\n        props.showAlert(\"Text Box Cleared\",\"danger\")\n    }\n    const handleOnChange =(event) =>{\n        setText(event.target.value)\n    }\n    const handleCopy =()=> {\n        let temp =document.getElementById(\"mybox\");\n        temp.select();\n        navigator.clipboard.writeText(temp.value);\n        props.showAlert(\"Copied to Clipboard\",\"primary\")\n    }\n    const handleExtraSpaces =()=> {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"))\n        props.showAlert(\"Extra spaces removed\",\"success\")\n    }\n    const [text, setText] = useState('');\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode===`dark`?`white`:'black'}}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" placeholder=\"Enter Text Here!\" style={{backgroundColor: props.mode===`dark`?`#28375b`:'white', color: props.mode===`dark`?`white`:'black'}} value={text} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\n            </div>\n            <button className=\"btn btn-primary mx-2 my-2\" disabled={text.length===0} onClick={handleUpClick}>Convert to Uppercase</button>\n            <button className=\"btn btn-primary mx-2 my-2\" disabled={text.length===0} onClick={handleLowClick}>Convert to Lowercase</button>\n            <button className=\"btn btn-primary mx-2 my-2\" disabled={text.length===0} onClick={handleCopy}>Copy Text</button>\n            <button className=\"btn btn-primary mx-2 my-2\" disabled={text.length===0} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n            <button className=\"btn btn-danger mx-2 my-2\" disabled={text.length===0} onClick={handleClearClick}>Clear Text</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode===`dark`?`white`:'black'}}>\n            <h1>Your Text Summary</h1>\n            <p>{text.length>0?text.trim().replace(/  +/g, \" \").split(\" \").length:0} words and {text.length} characters</p>\n            <p>{text.length>0?0.008 * text.split(' ').length:0} Minutes Read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Enter something to Preview here!\"}</p>\n        </div>\n        </>\n    )\n}\n\n\nTextForm.propTypes = {\n    heading: PropTypes.string\n}","import React from 'react'\n\nfunction Alert(props) {\n    return (\n        <div style={{height: \"50px\"}}>\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                <strong>{props.alert.msg}</strong>\n            </div>}\n            </div>\n    )\n}\n\nexport default Alert\n","import React from 'react'\n\nexport default function About(props) {\n    // const [myStyle, setMyStyle] = useState({\n    //     color: 'black',\n    //     backgroundColor: 'white'\n    // }) \n    // const [btnText, setbtnText] = useState(\"Enable Dark Mode\")\n    // const togglestyles =() => {\n    //     if(myStyle.color === 'white') {\n    //         setMyStyle({\n    //             color: 'black',\n    //             backgroundColor: 'white'\n    //         })\n    //         setbtnText(\"Enable Dark Mode\")\n    //     }\n    //     else {\n    //         setMyStyle({\n    //             color: 'white',\n    //             backgroundColor: 'black'\n    //         })\n    //         setbtnText(\"Enable Light Mode\")\n    //     }\n    // }\n    return (\n        <div className=\"container my-2 p-2\" style={{color: props.mode===`dark`?`white`:'black'}}>\n            <div class=\"jumbotron my-2\">\n                <h1>About Me!</h1>\n                <p>You can google him as “ekesel”. Developing strong relationships is the foundation of everything he does, both professionally and personally. I am Ekaansh Sahni, You can google me as \"ekesel\". I have advanced in Django Website Development. Apart from that, I have rich experience in Java and Python Programming!</p>\n                <a href=\"https://ekesel.me\"  ><button className=\"btn btn-primary\">Click Here</button></a>\n            </div>\n        </div>\n    )\n}\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  \n  const showAlert =(message, type)=> {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = ()=> {\n    if(mode=== 'light')\n    {\n      setMode('dark')\n      document.body.style.backgroundColor = \"#28375b\";\n      showAlert(\"Dark Mode Enabled\",\"success\")\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\",\"success\")\n    }\n  }\n  return (\n    <>\n     <Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} aboutText=\"About Me\" />\n    <Alert alert={alert} />\n    <div className=\"container my-3\">\n    <Switch>\n        <Route exact path=\"/about\">\n          <About mode={mode} />\n        </Route>\n        <Route exact path=\"/\">\n        <TextForm showAlert={showAlert} heading=\"Enter the Text To Analyze below\" mode={mode} />\n        </Route>\n    </Switch>\n    </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}